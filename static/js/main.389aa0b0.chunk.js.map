{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","_slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","console","log","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","msg","SpeechSynthesisUtterance","window","speechSynthesis","speak","split","length","Alert","alert","role","message","App","setMode","_useState3","_useState4","setAlert","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"6LAGe,SAASA,EAAOC,GAC7B,OACEC,IAAAC,cAAA,OACEC,UAAS,kCAAAC,OAAoCJ,EAAMK,KAAI,QAAAD,OAAOJ,EAAMK,OAEpEJ,IAAAC,cAAA,OAAKC,UAAU,mBACbF,IAAAC,cAAA,KAAGC,UAAU,eAAeG,KAAK,KAC9BN,EAAMO,OAETN,IAAAC,cAAA,UACEC,UAAU,iBACVK,KAAK,SACLC,iBAAe,WACfC,iBAAe,0BACfC,gBAAc,yBACdC,gBAAc,QACdC,aAAW,qBAEXZ,IAAAC,cAAA,QAAMC,UAAU,yBAElBF,IAAAC,cAAA,OAAKC,UAAU,2BAA2BW,GAAG,0BAC3Cb,IAAAC,cAAA,MAAIC,UAAU,mCACZF,IAAAC,cAAA,MAAIC,UAAU,YACZF,IAAAC,cAAA,KAAGC,UAAU,kBAAkBY,eAAa,OAAOT,KAAK,KAAK,UAWjEL,IAAAC,cAAA,OAAKC,UAAS,+BAAAC,OACI,UAAdJ,EAAMK,KAAgB,OAAO,UAC/BJ,IAAAC,cAAA,SAAOC,UAAU,mBACfa,QAAShB,EAAMiB,WACfT,KAAK,WACLM,GAAG,2BACLb,IAAAC,cAAA,SACEC,UAAU,mBACVe,QAAQ,0BACT,uBC5CE,SAASC,EAASnB,GAC/B,IAqBCoB,EACuBC,mBAAS,mBAAkBC,EAAAC,YAAAH,EAAA,GAA5CI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAGpB,OACErB,IAAAC,cAAAD,IAAAyB,SAAA,KACJzB,IAAAC,cAAA,OAAKC,UAAU,YAAYwB,MAAO,CAACC,MAAoB,SAAb5B,EAAMK,KAAc,QAAQ,UAChEJ,IAAAC,cAAA,UAAKF,EAAM6B,SACX5B,IAAAC,cAAA,OAAKC,UAAU,QACjBF,IAAAC,cAAA,YAAUC,UAAU,eAAe2B,MAAON,EAAMO,SAZ3B,SAACC,GACtBC,QAAQC,IAAI,aACZT,EAAQO,EAAMG,OAAOL,QAUqDH,MAAO,CAACS,gBAA8B,SAAbpC,EAAMK,KAAc,OAAO,QAAUuB,MAAoB,SAAb5B,EAAMK,KAAc,QAAQ,SAAUS,GAAG,QAAQuB,KAAK,OAErMpC,IAAAC,cAAA,UAAQC,UAAU,uBAAuBa,QAhCrB,WAEvB,IAAIsB,EAAUd,EAAKe,cACnBd,EAAQa,GACRtC,EAAMwC,UAAU,0BAA2B,aA4ByB,yBACjEvC,IAAAC,cAAA,UAAQC,UAAU,uBAAuBa,QAtBtB,WAEpB,IAAIsB,EAAUd,EAAKiB,cACnBhB,EAAQa,GACRtC,EAAMwC,UAAU,0BAA2B,aAkBuB,yBACjEvC,IAAAC,cAAA,UAAQM,KAAK,SAASQ,QA5BV,WACZ,IAAI0B,EAAM,IAAIC,yBACdD,EAAIlB,KAAOA,EACXoB,OAAOC,gBAAgBC,MAAMJ,IAyBSvC,UAAU,6BAA4B,UAE5EF,IAAAC,cAAA,OAAKC,UAAU,iBAAiBwB,MAAO,CAACC,MAAoB,SAAb5B,EAAMK,KAAc,QAAQ,UAC3EJ,IAAAC,cAAA,UAAI,qBACJD,IAAAC,cAAA,SAAG,SAAOsB,EAAKuB,MAAM,KAAKC,OAAO,QAAMxB,EAAKwB,OAAO,eACnD/C,IAAAC,cAAA,SAAI,KAAMsB,EAAKuB,MAAM,KAAKC,OAAO,iBACjC/C,IAAAC,cAAA,UAAI,WACJD,IAAAC,cAAA,SAAIsB,WC7BOyB,MAbf,SAAejD,GACb,OACEA,EAAMkD,OACJjD,IAAAC,cAAA,OACEC,UAAU,kDACVgD,KAAK,SAEJnD,EAAMkD,MAAM1C,KAAK,KAAGR,EAAMkD,MAAME,UC0D1BC,MA3Df,WAAe,IAAAjC,EACWC,mBAAS,SAAQC,EAAAC,YAAAH,EAAA,GAAlCf,EAAIiB,EAAA,GAAEgC,EAAOhC,EAAA,GAAuBiC,EAEjBlC,mBAAS,MAAKmC,EAAAjC,YAAAgC,EAAA,GAAjCL,EAAKM,EAAA,GAAEC,EAAQD,EAAA,GAChBhB,EAAY,SAACY,EAAS5C,GAC1BiD,EAAS,CACPL,QAASA,EACT5C,KAAMA,IAERkD,WAAW,WACTD,EAAS,OACR,OAsBL,OACExD,IAAAC,cAAAD,IAAAyB,SAAA,KAGIzB,IAAAC,cAACH,EAAM,CAACQ,MAAM,aAAaF,KAAMA,EAAMY,WAxB1B,WACJ,UAATZ,GACFiD,EAAQ,QACRK,SAASC,KAAKjC,MAAMS,gBAAkB,UACtCI,EAAU,6BAA8B,WACxCmB,SAASpD,MAAQ,yBASjB+C,EAAQ,SACRK,SAASC,KAAKjC,MAAMS,gBAAkB,QACtCI,EAAU,8BAA+B,WACzCmB,SAASpD,MAAQ,4BAQfN,IAAAC,cAAC+C,EAAK,CAACC,MAAOA,IACdjD,IAAAC,cAAA,OAAKC,UAAU,kBAMbF,IAAAC,cAACiB,EAAQ,CACHU,QAAQ,eACRxB,KAAMA,EACN6C,MAAOA,EACPV,UAAWA,OC7CZqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAWhB,SAASiB,eAAe,SACpDC,OACH5E,IAAAC,cAACD,IAAM6E,WAAU,KACf7E,IAAAC,cAACmD,EAAG,QAORQ","file":"static/js/main.389aa0b0.chunk.js","sourcesContent":["import React from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\" > \r\n                Home\r\n              </a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <Link \r\n              className=\"nav-link\" to=\"/about\">\r\n                About\r\n              </Link>\r\n            </li> */}\r\n          </ul>\r\n          <div className={`form-check form-switch text-${\r\n              props.mode=== \"light\"?\"dark\":\"light\"}`}>\r\n            <input className=\"form-check-input\"\r\n              onClick={props.toggleMode}\r\n              type=\"checkbox\"\r\n              id=\"flexSwitchCheckDefault\"/>  \r\n            <label\r\n              className=\"form-check-label\"\r\n              htmlFor=\"flexSwitchCheckDefault\"\r\n            >\r\n              Enable DarkMode\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\n// Navbar.PropTypes = {title: PropTypes.string,\r\n//                     aboutText: PropTypes.string\r\n// }\r\n\r\n// Navbar.defaultprops = {\r\n//   title: 'set title here',\r\n//   aboutText: 'about text here'\r\n// }\r\n","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = ()=>{\r\n//  console.log(\"uppercase was clicked\" +text);\r\n let newText = text.toUpperCase();\r\n setText(newText)\r\n props.showAlert(\"Converted to uppercase!\", \"success\");\r\n  }\r\n  const speak = () => {\r\n    let msg = new SpeechSynthesisUtterance();\r\n    msg.text = text;\r\n    window.speechSynthesis.speak(msg);\r\n  } \r\n const handleLoClick = ()=>{\r\n  //  console.log(\"uppercase was clicked\" +text);\r\n   let newText = text.toLowerCase();\r\n   setText(newText)\r\n   props.showAlert(\"Converted to lowercase!\", \"success\");\r\n\r\n  }\r\n  const handleOnChange = (event)=>{\r\n    console.log(\"On Change\")\r\n    setText(event.target.value);\r\n  }\r\n  const [text, setText] = useState('Enter text here');\r\n  // text = \"new text\"; wrong way to change state\r\n  // setText(\"new text\"); correct way to change state \r\n  return (\r\n    <>\r\n<div className=\"container\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n      <h1>{props.heading}</h1>\r\n      <div className=\"mb-3\">\r\n    <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'grey':'white' , color: props.mode==='dark'?'white':'black'}} id=\"myBox\" rows=\"8\"></textarea>\r\n    </div>\r\n    <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}> Convert to Uppercase</button>\r\n    <button className=\"btn btn-primary mx-2\" onClick={handleLoClick}> Convert to Lowercase</button>\r\n    <button type=\"submit\" onClick={speak} className=\"btn btn-warning mx-2 my-2\">Speak</button>\r\n</div>\r\n    <div className=\"container my-2\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n    <h1>Your Text Summary</h1>\r\n    <p>words {text.split(\" \").length} and {text.length} characters</p>\r\n    <p>{0.008*text.split(\" \").length} Minutes Read</p>\r\n    <h2>Preview</h2>\r\n    <p>{text}</p>\r\n</div>\r\n</>\r\n  )\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n  return (\r\n    props.alert && (\r\n      <div\r\n        className=\"alert alert-warning alert-dismissible fade show\"\r\n        role=\"alert\"\r\n      >\r\n        {props.alert.type}: {props.alert.message}\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","// import About from './components/About';\nimport React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport \"./App.css\";\nimport Alert from \"./components/Alert\";\n// import About from \"./components/About\";\n// import { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nfunction App() {\n  const [mode, setMode] = useState(\"light\"); //whether dark mode is enabled or not\n\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      message: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      document.title = \"Textutiles- DarkMode\";\n      // setInterval(() => {\n      //   document.title= 'Textutiles is amazing'\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title= ' Install Textutiles is now'\n      // }, 1500);\n    } \n    else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"light mode has been enabled\", \"success\");\n      document.title = \"Textutiles- LightMode\";\n    }\n  };\n  return (\n    <>\n    {/* <Router> */}\n      {/* <Navbar title=\"textutiles\" aboutText =\"aboutTextutiles\"/> */}\n        <Navbar title=\"Textutiles\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert}/>\n        <div className=\"container my-3\">\n        {/* <Routes>\n          <Route path=\"/about\"element= {<About/>}>\n          </Route> */}\n          {/* <Route path=\"/\" element= \n          { */}\n          <TextForm\n                heading=\"This is else\"\n                mode={mode}\n                alert={alert}\n                showAlert={showAlert}/>\n                {/* }> */}\n          {/* </Route>\n        </Routes> */}\n        </div>\n        {/* </Router> */}\n        \n    </>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}